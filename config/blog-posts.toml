blog_urls = [
"http://anowell.com/posts/why-rust.html",
"http://aturon.github.io/blog/2016/08/11/futures/",
"http://aturon.github.io/blog/2016/09/07/futures-design/",
"http://blog.8thlight.com/dave-torre/2015/03/11/the-option-type.html",
"http://blog.8thlight.com/uku-taht/2015/04/29/using-the-option-type-effectively.html",
"http://blog.adamperry.me/rust/2016/07/24/profiling-rust-perf-flamegraph/",
"http://blog.burntsushi.net/csv/",
"http://blog.burntsushi.net/ripgrep/",
"http://blog.burntsushi.net/rust-error-handling/",
"http://blog.japaric.io/cpu-monitor/",
"http://blog.japaric.io/fearless-concurrency/",
"http://blog.japaric.io/itm/",
"http://blog.japaric.io/quickstart/",
"http://blog.japaric.io/rtfm-overhead/",
"http://blog.jwilm.io/from-str-to-cow/",
#"http://blog.mbrt.it/2016-12-01-ripgrep-code-review/",
"http://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/",
"http://blog.rust-lang.org/2015/04/10/Fearless-Concurrency.html",
"http://blog.skylight.io/rust-means-never-having-to-close-a-socket/",
"http://brson.github.io/2016/11/30/starting-with-error-chain",
"http://brson.github.io/2017/04/05/minimally-nice-maintainer",
#"http://byronwasti.com/post/writing_a_ble_driver_in_rust/",
#"http://camlorn.net/posts/April%202017/rust-struct-field-reordering.html",
"http://carol-nichols.com/2015/08/01/rustc-discovery/",
"http://cglab.ca/~abeinges/blah/everyone-poops/",
"http://cglab.ca/~abeinges/blah/rust-btree-case/",
"http://cglab.ca/~abeinges/blah/rust-generics-and-collections/",
"http://cglab.ca/~abeinges/blah/rust-lifetimes-and-collections/",
"http://cglab.ca/~abeinges/blah/rust-reuse-and-recycle/",
"http://cglab.ca/~abeinges/blah/rust-unsafe-intro/",
"http://cliffle.com/blog/m4vga-in-rust/",
"http://dtrace.org/blogs/bmc/2018/09/28/the-relative-performance-of-c-and-rust/",
"http://graydon2.dreamwidth.org/1597.html",
"http://graydon2.dreamwidth.org/214016.html",
"http://graydon2.dreamwidth.org/218040.html",
"http://graydon2.dreamwidth.org/247406.html",
"http://hermanradtke.com/2015/05/03/string-vs-str-in-rust-functions.html",
"http://hermanradtke.com/2015/05/06/creating-a-rust-function-that-accepts-string-or-str.html",
"http://hermanradtke.com/2015/05/29/creating-a-rust-function-that-returns-string-or-str.html",
"http://hermanradtke.com/2015/06/09/strategies-for-solving-cannot-move-out-of-borrowing-errors-in-rust.html",
"http://hermanradtke.com/2015/06/22/effectively-using-iterators-in-rust.html",
"http://hermanradtke.com/2015/07/12/my-basic-understanding-of-mio-and-async-io.html",
"http://hermanradtke.com/2015/09/12/creating-a-simple-protocol-when-using-rust-and-mio.html",
"http://hermanradtke.com/2015/10/23/managing-connection-state-with-mio-rust.html",
"http://hermanradtke.com/2016/03/17/unions-rust-ffi.html",
"http://hermanradtke.com/2016/09/12/rust-using-and_then-and-map-combinators-on-result-type.html",
"http://hoverbear.org/2015/03/07/rust-travis-github-pages/",
"http://hoverbear.org/2015/07/10/reading-rust-function-signatures/",
"http://huonw.github.io/blog/2015/01/object-safety/",
"http://huonw.github.io/blog/2015/04/helping-travis-catch-the-rustc-train/",
"http://huonw.github.io/blog/2015/05/travis-on-the-train-part-2/",
"http://kamalmarhubi.com/blog/2016/04/13/rust-nix-easier-unix-systems-programming-3/",
"http://manishearth.github.io/blog/2016/01/03/making-your-open-source-project-newcomer-friendly/",
"http://manishearth.github.io/blog/2017/01/11/rust-tidbits-what-is-a-lang-item/",
"http://manishearth.github.io/blog/2017/01/14/stop-ascribing-meaning-to-unicode-code-points/",
#"http://panpanick.ninja/30-12-2016.html",
"http://patshaughnessy.net/2018/3/15/how-rust-implements-tagged-unions",
"http://pling.jondgoodwin.com/post/lifetimes/",
"http://robert.ocallahan.org/2016/02/rewrite-everything-in-rust.html",
"http://science.raphael.poss.name/rust-for-functional-programmers.html",
"http://smallcultfollowing.com/babysteps/blog/2015/04/29/on-reference-counting-and-leaks/",
"http://smallcultfollowing.com/babysteps/blog/2015/04/30/a-few-more-remarks-on-reference-counting-and-leaks/",
"http://smallcultfollowing.com/babysteps/blog/2015/12/18/rayon-data-parallelism-in-rust/",
"http://smallcultfollowing.com/babysteps/blog/2016/02/19/parallel-iterators-part-1-foundations/",
"http://smallcultfollowing.com/babysteps/blog/2016/02/25/parallel-iterators-part-2-producers/",
"http://smallcultfollowing.com/babysteps/blog/2016/05/23/unsafe-abstractions/",
"http://smallcultfollowing.com/babysteps/blog/2016/05/27/the-tootsie-pop-model-for-unsafe-code/",
"http://smallcultfollowing.com/babysteps/blog/2016/08/18/tootsie-pop-followup/",
"http://smallcultfollowing.com/babysteps/blog/2016/09/12/thoughts-on-trusting-types-and-unsafe-code/",
"http://smallcultfollowing.com/babysteps/blog/2016/10/02/observational-equivalence-and-unsafe-code/",
"http://smallcultfollowing.com/babysteps/blog/2016/11/14/parallel-iterators-part-3-consumers/",
"http://smallcultfollowing.com/babysteps/blog/2017/01/22/assigning-blame-to-unsafe-code/",
"http://smallcultfollowing.com/babysteps/blog/2017/02/01/unsafe-code-and-shared-references/",
"http://smallcultfollowing.com/babysteps/blog/2017/05/02/gnome-class-integrating-rust-and-the-gnome-object-system/",
"http://sunjay.ca/2016/07/25/rust-code-coverage",
"http://thume.ca/2019/04/29/comparing-compilers-in-rust-haskell-c-and-python/",
"http://ticki.github.io/blog/making-terminal-applications-in-rust-with-termion/",
"http://transitiontech.ca/random/RIIR",
"http://way-cooler.org/blog/2019/04/29/rewriting-way-cooler-in-c.html",
"http://words.steveklabnik.com/a-new-introduction-to-rust",
"http://words.steveklabnik.com/an-overview-of-macros-in-rust",
"http://words.steveklabnik.com/fire-mario-not-fire-flowers",
"http://words.steveklabnik.com/four-years-with-rust",
"http://words.steveklabnik.com/rust-is-more-than-safety",
"http://www.chriskrycho.com/2018/exploring-4-languages-integrity-and-consistency.html",
#"http://www.jonathanturner.org/2016/02/down-the-rabbit-hole-with-traits.html",
"http://www.ncameron.org/blog/macros-in-rust-pt1/",
"http://www.ncameron.org/blog/macros-in-rust-pt2/",
"http://www.ncameron.org/blog/macros-in-rust-pt3/",
"http://www.ncameron.org/blog/macros-in-rust-pt4/",
"http://www.ncameron.org/blog/rust-is-about-productivity/",
"http://xion.io/post/code/rust-for-loop.html",
"http://xion.io/post/code/rust-patterns-ref.html",
"http://xion.io/post/programming/rust-async-closer-look.html",
"https://anderspitman.net/2018/04/04/static-react-rust-webapp/",
"https://aturon.github.io/blog/2015/08/27/epoch/",
"https://aturon.github.io/tech/2018/04/24/async-borrowing/",
"https://beachape.com/blog/2017/05/24/rust-from-scala/",
"https://benashford.github.io/blog/2015/05/24/rust-traits-for-developer-friendly-libraries/",
"https://blog.adamant-lang.org/2019/rust-lifetime-visualization-ideas/",
"https://blog.dbrgn.ch/2019/12/24/testing-for-no-std-compatibility/",
"https://blog.discordapp.com/why-discord-is-switching-from-go-to-rust-a190bbca2b1f",
"https://blog.guillaume-gomez.fr/articles/2017-03-09+Little+tour+of+multiple+iterators+implementation+in+Rust",
"https://blog.logrocket.com/how-to-write-crap-rust-code/",
"https://blog.rust-lang.org/2014/10/30/Stability.html",
"https://blog.rust-lang.org/2015/04/17/Enums-match-mutation-and-moves.html",
"https://blog.rust-lang.org/2015/05/11/traits.html",
"https://brandur.org/fragments/rust-brick-walls",
"https://brandur.org/rust-web",
"https://brson.github.io/2017/07/10/how-rust-is-tested",
"https://brson.github.io/styletest.html",
"https://cbreeden.github.io/Macros11/",
"https://chrismorgan.info/blog/rust-cfg_attr.html",
"https://chrismorgan.info/blog/rust-fizzbuzz.html",
"https://chrismorgan.info/blog/rust-ownership-the-hard-way.html",
"https://danielkeep.github.io/practical-intro-to-macros.html",
"https://dev.to/sendilkumarn/increase-rust-and-webassembly-performance-382h",
"https://docs.rs/dtolnay/*/dtolnay/macro._03__soundness_bugs.html",
"https://fasterthanli.me/blog/2020/a-half-hour-to-learn-rust/",
"https://fasterthanli.me/blog/2020/i-want-off-mr-golangs-wild-ride/",
"https://ferrous-systems.com/blog/zero-sized-references/",
#"https://gankro.github.io/blah/only-in-rust/",
"https://gill.net.in/posts/auth-microservice-rust-actix-web1.0-diesel-complete-tutorial/",
"https://github.com/diwic/reffers-rs/blob/master/docs/Pointers.md",
"https://github.com/dtolnay/semver-trick",
"https://github.com/ferrous-systems/elements-of-rust/",
"https://gregoryszorc.com/blog/2020/01/13/mercurial%27s-journey-to-and-reflections-on-python-3/",
"https://hacks.mozilla.org/2018/03/making-webassembly-better-for-rust-for-all-languages/",
"https://hoverbear.org/2015/03/03/getting-acquainted-with-mio/",
"https://hoverbear.org/2015/05/02/a-journey-into-iterators/",
"https://hoverbear.org/2015/09/12/understand-over-guesswork/",
"https://hoverbear.org/2016/10/12/rust-state-machine-pattern/",
"https://hsivonen.fi/string-length/",
"https://huonw.github.io/blog/2014/07/what-does-rusts-unsafe-mean/",
"https://huonw.github.io/blog/2015/01/peeking-inside-trait-objects/",
"https://huonw.github.io/blog/2015/01/the-sized-trait/",
"https://huonw.github.io/blog/2015/02/some-notes-on-send-and-sync/",
"https://huonw.github.io/blog/2015/05/defaulting-to-thread-safety/",
"https://huonw.github.io/blog/2015/05/finding-closure-in-rust/",
"https://huonw.github.io/blog/2015/05/where-self-meets-sized-revisiting-object-safety/",
"https://huonw.github.io/blog/2016/04/memory-leaks-are-memory-safe/",
"https://huonw.github.io/blog/2016/04/myths-and-legends-about-integer-overflow-in-rust/",
"https://insanitybit.github.io/2017/07/10/building-a-microservice-in-rust",
"https://jackmott.github.io/2017/02/27/trail-of-slow.html",
"https://jamesmunns.com/update/2018/04/01/tinyrocket.html",
"https://jason-williams.co.uk/a-possible-new-backend-for-rust",
"https://jitter.company/blog/2020/01/28/measuring-space-time-behaviours-of-piano-keys-with-rust/",
"https://kasma1990.gitlab.io/2017/01/01/rust-is-about-better-citizenship/",
"https://lifthrasiir.github.io/rustlog/why-is-a-rust-executable-large.html",
"https://limpet.net/mbrubeck/2019/02/07/rust-a-unique-perspective.html",
"https://llogiq.github.io/2015/06/16/bench.html",
"https://llogiq.github.io/2015/07/09/cow.html",
"https://llogiq.github.io/2015/07/10/cow-redux.html",
"https://llogiq.github.io/2015/07/15/profiling.html",
"https://llogiq.github.io/2015/07/30/traits.html",
"https://llogiq.github.io/2015/10/03/fast.html",
"https://llogiq.github.io/2015/11/27/from-into.html",
"https://llogiq.github.io/2015/12/12/types.html",
"https://llogiq.github.io/2016/02/11/rustic.html",
"https://llogiq.github.io/2016/02/23/moretypes.html",
"https://llogiq.github.io/2016/04/28/arraymap.html",
"https://llogiq.github.io/2016/12/27/retro.html",
"https://llogiq.github.io/2017/06/01/perf-pitfalls.html",
"https://llogiq.github.io/2018/04/03/corners.html",
"https://lucumr.pocoo.org/2020/1/1/async-pressure/",
"https://manishearth.github.io/blog/2015/05/03/where-rust-really-shines/",
"https://manishearth.github.io/blog/2015/05/17/the-problem-with-shared-mutability/",
"https://manishearth.github.io/blog/2015/05/27/wrapper-types-in-rust-choosing-your-guarantees/",
"https://manishearth.github.io/blog/2015/05/30/how-rust-achieves-thread-safety/",
"https://manishearth.github.io/blog/2016/12/02/reflections-on-rusting-trust/",
"https://manishearth.github.io/blog/2017/01/15/breaking-our-latin-1-assumptions/",
"https://manishearth.github.io/blog/2017/03/04/what-are-sum-product-and-pi-types/",
"https://manishearth.github.io/blog/2017/03/18/inhtpinhtpamaa/",
"https://matklad.github.io/2020/02/14/why-rust-is-loved.html",
"https://matthias-endler.de/2017/why-type-systems-matter/",
"https://medium.com/@Hisako1337/rust-in-2017-8f2b57a67d9b#.3eegqri2g",
"https://medium.com/@ag_dubs/fire-flowers-and-marios-marketing-rust-996b3fdbe8f3",
"https://medium.com/@edwardpku/being-an-intermediate-rust-programmer-in-one-day-37283bb1b0b0",
"https://medium.com/@ly.lee/hosting-embedded-rust-apps-on-apache-mynewt-with-stm32-blue-pill-c86b119fe5f",
"https://medium.com/@richardanaya/a-journey-through-rust-lifetimes-5a08782c7091",
"https://medium.com/@robertgrosse/my-experience-rewriting-enjarify-in-rust-723089b406ad",
"https://medium.com/@robertgrosse/optimizing-rc-memory-usage-in-rust-6652de9e119e",
"https://medium.com/@robertgrosse/parallelizing-enjarify-in-go-and-rust-21055d64af7e",
"https://medium.com/@robertgrosse/rust-makes-implicit-invariants-explicit-baf4cf17ae50",
"https://medium.com/dwelo-r-d/we-rewrote-our-iot-platform-in-rust-and-got-away-with-it-2c8867c61b67",
"https://medium.com/learning-rust",
"https://medium.com/learning-rust/rust-basics-e73304ab35c7",
"https://medium.com/learning-rust/rust-beyond-the-basics-4fc697e3bf4f",
"https://medium.com/learning-rust/rust-the-tough-part-2ea11ed3693e",
"https://medium.com/tadaweb/security-by-design-a-brief-introduction-to-rust-378060e45038",
"https://mgattozzi.com/rust-is",
"https://msrc-blog.microsoft.com/2020/04/29/the-safety-boat-kubernetes-and-rust/",
"https://oribenshir.github.io/afternoon_rusting/blog/copy-on-write",
"https://os.phil-opp.com/async-await/",
"https://people.gnome.org/~federico/blog/rust-libstd-syscalls-and-errors.html",
"https://pitdicker.github.io/Interior-mutability-patterns/",
"https://raphaelgomes.dev/blog/articles/2019-07-01-sharing-references-between-python-and-rust.html",
"https://raphlinus.github.io/rust/2019/08/21/rust-bloat.html",
#"https://redox-os.org/news/rust-is-softwares-salvation-17/",
"https://ricardomartins.cc/2016/06/08/interior-mutability",
"https://ricardomartins.cc/2016/06/25/interior-mutability-thread-safety",
"https://ricardomartins.cc/2016/07/11/interior-mutability-behind-the-curtain",
"https://ricardomartins.cc/2016/08/03/convenient_and_idiomatic_conversions_in_rust",
"https://rufflewind.com/2017-02-15/rust-move-copy-borrow",
"https://ruudvanasseldonk.com/2016/11/30/zero-cost-abstractions",
"https://santiagopastorino.com/rust-marketing-pitch/",
"https://scribbles.pascalhertleif.de/elegant-apis-in-rust.html",
"https://sdleffler.github.io/RustTypeSystemTuringComplete/",
"https://smallcultfollowing.com/babysteps/blog/2012/11/18/imagine-never-hearing-the-phrase-aliasable/",
"https://stackoverflow.blog/2020/01/20/what-is-rust-and-why-is-it-so-popular/",
"https://stevedonovan.github.io/rustifications/2018/08/18/rust-closures-are-hard.html",
"https://stjepang.github.io/2019/01/29/lock-free-rust-crossbeam-in-2019.html",
"https://thefeedbackloop.xyz/safety-is-rusts-fireflower/",
"https://tmandry.gitlab.io/blog/posts/optimizing-await-1/",
"https://tmandry.gitlab.io/blog/posts/optimizing-await-2/",
"https://tonyarcieri.com/it-s-time-for-a-memory-safety-intervention",
#"https://unhandledexpression.com/2017/07/10/why-you-should-actually-rewrite-it-in-rust/",
#"https://unhandledexpression.com/2017/07/12/how-to-rewrite-you-project-in-rust/",
"https://www.coredump.ch/2017/07/05/understanding-the-tokio-reactor-core/",
"https://www.ncameron.org/blog/migrating-a-crate-from-futures-0-1-to-0-3/",
"https://www.nibor.org/blog/fuzzing-is-magic---or-how-i-found-a-panic-in-rusts-regex-library/",
"https://www.pietroalbini.org/blog/shipping-a-compiler-every-six-weeks/",
"https://www.ralfj.de/blog/2016/01/09/the-scope-of-unsafe.html",
"https://www.ralfj.de/blog/2017/06/09/mutexguard-sync.html",
"https://www.reddit.com/r/rust/comments/5lo6ny/rust_is_about_boldness/",
"https://www.worthe-it.co.za/programming/2017/06/19/a-rusty-tale-of-shared-memories-and-passed-messages-1.html",
"https://www.worthe-it.co.za/programming/2017/07/11/a-rusty-tale-of-shared-memories-and-passed-messages-2.html",
]
